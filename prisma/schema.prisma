generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Posts {
  postId      String     @id @default(uuid())
  slug        String     @db.VarChar(256)
  description String     @db.VarChar(512)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  readingTime Int        @default(0) @db.UnsignedInt
  title       String     @db.VarChar(256)
  language    String     @default("pt-br") @db.VarChar(6)
  content     String     @db.Text
  published   Boolean    @default(false)
  visitors    Int        @db.UnsignedInt
  originalId  String?
  authorId    String
  tags        PostTags[]
  Post        Posts[]    @relation("originalPost")
  author      Users      @relation(fields: [authorId], references: [id])
  original    Posts?     @relation(name: "originalPost", fields: [originalId], references: [postId], onUpdate: NoAction, onDelete: NoAction)

  @@map("posts")
}

model Tags {
  tagId    String     @id @default(uuid())
  label    String     @unique @db.VarChar(32)
  type     String     @default("undefined") @db.VarChar(32)
  PostTags PostTags[]

  @@map("tags")
}

model PostTags {
  post       Posts    @relation(fields: [postId], references: [postId])
  tag        Tags     @relation(fields: [tagId], references: [tagId])
  postId     String
  tagId      String
  assignedAt DateTime @default(now())

  @@id([postId, tagId])
  @@map("post_tags")
}

model Users {
  id            String  @id @default(uuid())
  Post          Posts[]
  name          String
  email         String  @unique
  authService   String  @default("")
  authServiceId String  @default("")

  @@map("users")
}
